<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Room Chat</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f9;
        }
        #chat-box {
            width: 100%;
            height: 300px;
            border: 1px solid #ddd;
            overflow-y: scroll;
            padding: 10px;
            background-color: #fff;
        }
        #message {
            width: calc(100% - 120px);
            padding: 10px;
            margin: 10px 0;
        }
        button {
            padding: 10px 20px;
            cursor: pointer;
        }
        #user-settings {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        .message {
            margin: 5px 0;
        }
        .message.self {
            color: green;
        }
        .win-message {
            font-weight: bold;
            color: red;
        }
    </style>
</head>
<body>

    <h2>Room Chat</h2>
    
    <div id="user-settings">
        <div>
            <label for="room">Room Name: </label>
            <input type="text" id="room" placeholder="Enter room name">
            <button id="join-btn">Join Room</button>
            <button id="rnd-btn">Create Randomnumber</button>
        </div>
        <div>
            <label for="username">Username: </label>
            <input type="text" id="username" placeholder="Enter your name">
            <button id="name-btn">Set Name</button>
        </div>
    </div>

    <div id="chat-box"></div>
    
    <div>
        <input type="text" id="message" placeholder="Enter your message">
        <button id="send-btn">Send</button>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let currentRoom = '';
        let userName = 'Anonymous';

        function Win(winnerName) {
            const chatBox = document.getElementById('chat-box');
            const winMessage = document.createElement('p');
            winMessage.classList.add('win-message');
            winMessage.textContent = `${winnerName} hat gewonnen!`; // Zeige den Gewinnernamen an
            chatBox.appendChild(winMessage);
        }

        document.getElementById('join-btn').addEventListener('click', () => {
            const room = document.getElementById('room').value;
            if (room) {
                currentRoom = room;
                socket.emit('join_room', room);
                document.getElementById('chat-box').innerHTML += `<p><em>Joined room: ${room}</em></p>`;
            }
        });

        // Zufallszahl bei Klick auf den Button vom Server anfordern
        document.getElementById('rnd-btn').addEventListener('click', () => {
            const room = document.getElementById('room').value;
            if (room){
                currentRoom = room;
                socket.emit('generate_random_number', {room: currentRoom}); // Event an den Server senden
            }
        });

        // Setze den Benutzernamen
        document.getElementById('name-btn').addEventListener('click', () => {
            const newUserName = document.getElementById('username').value;
            if (newUserName) {
                userName = newUserName;
                document.getElementById('chat-box').innerHTML += `<p><em>Name geändert zu: ${userName}</em></p>`;
            }
        });

        document.getElementById('send-btn').addEventListener('click', () => {
            const message = document.getElementById('message').value;
            if (message && currentRoom) {
                socket.emit('message', { room: currentRoom, message, name: userName });
                document.getElementById('message').value = '';
            }
        });

        socket.on('message', (data) => {
            const chatBox = document.getElementById('chat-box');
            const messageElement = document.createElement('p');
            messageElement.classList.add('message');
            
            // Wenn der Benutzer selbst der Absender ist, wird die Nachricht grün
            if (data.name === userName) {
                messageElement.classList.add('self');
            }

            messageElement.innerHTML = `<strong>${data.name}:</strong> ${data.message}`;
            chatBox.appendChild(messageElement);
        });

        socket.on('win', (data) => {
            Win(data.winner); // Gewinnername anzeigen
        });
    </script>
</body>
</html>